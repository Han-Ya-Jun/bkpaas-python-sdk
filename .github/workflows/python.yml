name: CI Check

on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]
  workflow_dispatch:

jobs:
  check:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Format with isort
      run: |
        pip install isort==5.9.2
        isort sdks/ --settings-path=sdks/blue-krill/pyproject.toml
    - name: Format with black
      run: |
        pip install black==21.7b0
        black sdks/ --config=sdks/blue-krill/pyproject.toml
    - name: Lint with flake8
      run: |
        pip install pyproject-flake8
        pflake8 sdks/ --config=sdks/blue-krill/pyproject.toml
    - name: Lint with mypy
      run: |
        pip install mypy==0.910 types-requests==2.25.0 types-setuptools==57.0.0 types-dataclasses==0.1.5 types-redis==3.5.4 types-PyMySQL==1.0.0 types-six==0.1.7 types-toml==0.1.3
        mypy sdks/bk-storages --config-file=sdks/bk-storages/pyproject.toml
        mypy sdks/blue-krill --config-file=sdks/blue-krill/pyproject.toml
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7]
        poetry-version: [1.1.7]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
          poetry-version: ${{ matrix.poetry-version }}
    - name: Test blue-krill
      run: |
        cd sdks/blue-krill
        poetry install
        poetry run pytest
        poetry build
